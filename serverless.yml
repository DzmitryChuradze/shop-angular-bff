service: shop-angular-be

plugins:
  - serverless-webpack

package:
  individually: true

custom:
  webpack:
    packager: npm

provider:
  name: aws
  region: eu-west-1
  runtime: nodejs14.x
  httpApi:
    cors: true
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action: "s3:ListBucket"
          Resource:
            - "arn:aws:s3:::rs-school-app-bucket-upload"

        - Effect: "Allow"
          Action:
            - "s3:*"
          Resource:
            - "arn:aws:s3:::rs-school-app-bucket-upload/*"

        - Effect: "Allow"
          Action: "sqs:*"
          Resource:
            Fn::GetAtt: [SQSQueue, Arn]

        - Effect: "Allow"
          Action: "sns:*"
          Resource:
            Ref: SNSTopic

  environment:
    SQS_URL:
      Ref: SQSQueue
    SNS_ARN:
      Ref: SNSTopic

resources:
  Resources:
    SQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: rs-school-app-sqs-queue

    SNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: rs-school-app-sns-topic

    SNSSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: Dzmitry_Churadze1@epam.com
        Protocol: email
        TopicArn:
          Ref: SNSTopic

functions:
  getProducts:
    handler: src/getProducts.handler
    events:
      - http:
          path: products
          method: get

  getProductById:
    handler: src/getProductById.handler
    events:
      - http:
          path: products/{productId}
          method: get
          request:
            parameters:
              paths:
                productId: true

  createProduct:
    handler: src/createProduct.handler
    events:
      - http:
          path: products
          method: post
          request:
            schemas:
              application/json: ${file(src/schemas/createProductSchema.json)}

  importProductsFile:
    handler: src/importProductsFile.handler
    events:
      - http:
          path: import
          method: get
          request:
            parameters:
              querystrings:
                name: true

  importFileParser:
    handler: src/importFileParser.handler
    events:
      - s3:
          bucket: rs-school-app-bucket-upload
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
          existing: true

  catalogBatchProcess:
    handler: src/catalogBatchProcess.handler
    events:
      - sqs:
          batchSize: 5
          arn:
            Fn::GetAtt: [SQSQueue, Arn]
